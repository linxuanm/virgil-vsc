{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Virgil",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#type"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#identifier"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"begin": "/\\*",
					"end": "\\*/",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.virgil"
						}
					},
					"name": "comment.block.virgil"
				},
				{
					"begin": "//",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.comment.virgil"
						}
					},
					"end": "$",
					"name": "comment.line.double-slash.virgil"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"match": "\\b(true|false|null)\\b",
					"name": "constant.language.virgil"
				},
				{
					"match": "0[xX][A-Fa-f0-9]+\\b",
					"name": "constant.numeric.integer.hex.virgil"
				},
				{
					"match": "0|(-?[1-9][0-9]*|0x[a-fA-F0-9]+)[uU]?[lL]?\\b",
					"name": "constant.numeric.integer.virgil"
				},
				{
					"match": "-?(0|([1-9][0-9]*))(\\.[0-9]*)?([eE][\\+-]?([0]|[1-9][0-9]*))?[fFdD]?\\b",
					"name": "constant.numeric.float.virgil"
				},
				{
					"include": "#strings"
				}
			]
        },
        "identifier": {
			"name": "variable.other.virgil",
			"match": "\\b[a-zA-Z]\\w*"
		},
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.virgil",
					"match": "\\b(?:if|else|while|for|return|match|continue|break)\\b"
				},
				{
					"name": "storage.modifier.import.virgil",
					"match": "\\b(import)\\b"
				},
				{
					"name": "storage.modifier.export.virgil",
					"match": "\\b(export)\\b"
				},
				{
					"name": "keyword.other.extends.virgil",
					"match": "\\b(extends)\\b"
				},
				{
					"name": "storage.modifier.private.virgil",
					"match": "\\b(private)\\b"
				},
				{
					"name": "keyword.other.arrow.virgil",
					"match": "=>"
				},
				{
					"name": "storage.type.type.virgil",
					"match": "\\b(type)\\b"
				},
				{
					"name": "keyword.other.case.virgil",
					"match": "\\b(case)\\b"
				},
                {
                    "name": "storage.type.def.virgil",
                    "match": "\\b(def)\\b"
                },
                {
                    "name": "storage.type.var.virgil",
                    "match": "\\b(var)\\b"
                },
                {
                    "name": "storage.type.enum.virgil",
                    "match": "\\b(enum)\\b"
                },
                {
                    "name": "storage.type.component.virgil",
                    "match": "\\b(component)\\b"
                },
                {
                    "name": "storage.type.class.virgil",
                    "match": "\\b(class)\\b"
                },
                {
                    "name": "storage.type.function.arrow.virgil",
                    "match": "=>"
                },
                {
                    "name": "entity.name.function",
                    "match": "\\b(new|super)\\b"
                },
				{
					"name": "storage.modifier.virgil",
					"match": "#(unboxed|boxed|packed)\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.operator.postfix.virgil",
					"match": "\\+\\+|--"
				},
				{
					"name": "keyword.operator.infix.virgil",
					"match": "<=|>=|<<|>>|&&|\\|\\|"
				},
				{
					"name": "keyword.operator.infix.virgil",
					"match": "!=|==|>|<|<=|\\+|-|\\*|/|&|\\|"
				},
				{
					"name": "keyword.operator.cast_or_query.virgil",
					"match": "[!\\?]"
				},
                {
                    "name": "keyword.operator.expression.in.virgil",
                    "match": "\\b(in)\\b"
                },
                {
                    "name": "keyword.operator.assign.virgil",
                    "match": "(<<|>>|\\||&|<<<|>>>|\\+|-|\\*|/|%|\\^)=|="
                }
			]
		},
		"strings": {
			"patterns": [
				{
					"begin": "\"",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.virgil"
						}
					},
					"end": "\"",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.virgil"
						}
					},
					"name": "string.quoted.double.virgil",
					"patterns": [
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#string_printable_char"
						}
					]
				},
				{
					"begin": "'",
					"beginCaptures": {
						"0": {
							"name": "punctuation.definition.string.begin.virgil"
						}
					},
					"end": "'",
					"endCaptures": {
						"0": {
							"name": "punctuation.definition.string.end.virgil"
						}
					},
					"name": "string.quoted.single.virgil",
					"patterns": [
						{
							"include": "#string_escaped_char"
						},
						{
							"include": "#string_printable_char"
						}
					]
				}
			]
		},
		"string_escaped_char": {
			"patterns": [
				{
					"match": "\\\\[rnbt'\"\\\\]",
					"name": "constant.character.escape"
				},
				{
					"match": "\\\\x[0-9A-Fa-f][0-9A-Fa-f]",
					"name": "constant.character.escape.hex"
				}
			]
		},
		"string_printable_char": {
			"match": "[A-Za-z0-9`~!@#\\$%\\^&\\*\\(\\)-_=\\+\\[\\{\\]\\};:,<\\.>/\\?]"
		},
		"type": {
			"patterns": [
				{
					"match": "\\b(bool|int|long|byte|void|float|double|string|Array)\\b",
					"name": "support.class.virgil"
				},
				{
					"match": "->",
					"name": "storage.type.function.arrow.virgil"
				},
				{
					"match": "\\."
				}
			]
		}
	},
	"scopeName": "source.virgil"
}
